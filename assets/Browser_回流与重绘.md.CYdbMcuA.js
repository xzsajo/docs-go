import{_ as i,c as t,a3 as e,o as a}from"./chunks/framework.CAwIQbWu.js";const _=JSON.parse('{"title":"回流与重绘","description":"","frontmatter":{},"headers":[],"relativePath":"Browser/回流与重绘.md","filePath":"Browser/回流与重绘.md","lastUpdated":1717059360000}'),r={name:"Browser/回流与重绘.md"};function o(n,l,p,s,d,c){return a(),t("div",null,l[0]||(l[0]=[e('<h1 id="回流与重绘" tabindex="-1">回流与重绘 <a class="header-anchor" href="#回流与重绘" aria-label="Permalink to &quot;回流与重绘&quot;">​</a></h1><p><strong>重绘</strong>是指当页面中元素的样式发生改变（如颜色、阴影、边框等）而不影响它在文档流中的位置时，浏览器会对这些元素进行重新绘制，这个过程称为重绘</p><p><strong>回流</strong>是指页面中元素的尺寸、结构或某些属性发生改变时，浏览器需要重新计算元素的大小和位置，然后再重新渲染页面的过程</p><p>回流必定会触发重绘，但重绘不一定会引起回流</p><p>触发回流的常见情况包括：</p><ul><li>添加或者删除可见的 DOM 元素</li><li>元素位置/尺寸/内容发声改变</li><li>浏览器窗口大小发生变化</li><li>应用 CSS 样式的改变</li></ul><p>引起回流的样式改变：</p><ul><li>改变元素的尺寸（width、height、padding、margin等）</li><li>改变元素位置（top、left、right、bottom等）</li><li>改变元素显示（display:none）</li><li>添加或删除可见的 DOM 元素</li><li>改变元素字体</li><li>改变浏览器窗口大小</li></ul><p>引起重绘的样式改变：</p><ul><li>改变元素颜色</li><li>改变元素背景颜色</li><li>改变元素阴影</li><li>改变元素边框</li></ul><p>所以在页面优化优性能时，我们应该尽量减少触发回流的操作，一些常见的优化手段：</p><ul><li>批量修改DOM（Render 的批处理也会如此考虑的）</li><li>使用 transform 代替 top/left</li><li>使用 visibility 代替 <code>display:none</code></li><li>尽量减少不必要的样式改变</li><li>将颜色、背景颜色、边框等发生重绘的样式写在 CSS 样式的前头</li></ul>',12)]))}const m=i(r,[["render",o]]);export{_ as __pageData,m as default};
