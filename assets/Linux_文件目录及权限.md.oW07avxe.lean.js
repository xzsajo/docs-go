import{_ as i,c as a,a3 as l,o as e}from"./chunks/framework.CAwIQbWu.js";const c=JSON.parse('{"title":"Linux 文件目录及权限","description":"","frontmatter":{},"headers":[],"relativePath":"Linux/文件目录及权限.md","filePath":"Linux/文件目录及权限.md","lastUpdated":1730205014000}'),t={name:"Linux/文件目录及权限.md"};function n(p,s,h,r,o,d){return e(),a("div",null,s[0]||(s[0]=[l(`<h1 id="linux-文件目录及权限" tabindex="-1">Linux 文件目录及权限 <a class="header-anchor" href="#linux-文件目录及权限" aria-label="Permalink to &quot;Linux 文件目录及权限&quot;">​</a></h1><p>笔者只记录一些常见的 Linux 操作，肯定不全，如果要查找命令，可以去 <a href="https://www.linuxcool.com/" target="_blank" rel="noreferrer">Linux 命令大全（手册）</a>处查看相关命令</p><h2 id="文件目录基本操作" tabindex="-1">文件目录基本操作 <a class="header-anchor" href="#文件目录基本操作" aria-label="Permalink to &quot;文件目录基本操作&quot;">​</a></h2><p><code>ls</code>：列出目录文件</p><ul><li><code>ll</code> / <code>ls –l</code> ：显示文件的属性以及文件所属的用户和组</li><li>-a：查看隐藏文件</li></ul><p><code>cat</code>：查看文件</p><p><code>cd</code>：切换目录</p><p><code>cp</code>：复制文件与文件夹</p><ul><li>-r：复制目录，包括所有文件和子目录</li><li>scp：复制文件或目录，从本机到远程系统。或者远程系统到本机</li></ul><p><code>mv</code>：移动文件</p><ul><li><code>mv file1 file2</code>：重命名文件·</li><li><code>mv *.pdf ~/Documents</code>：将所有pdf 移动到 Documents 文件下</li></ul><p><code>rm</code>：删除文件目录</p><ul><li>-r：删除整个目录</li></ul><p><code>pwd</code>：查看当前目录</p><p><code>mkdir</code>：创建目录</p><p><code>touch</code>：创建文件</p><h2 id="文件权限" tabindex="-1">文件权限 <a class="header-anchor" href="#文件权限" aria-label="Permalink to &quot;文件权限&quot;">​</a></h2><p>Linux 系统是一个典型的多用户系统，不同的用户处于不同的地位，拥有不同的权限。</p><p>为了保护系统的安全性，Linux 系统对不同的用户访问同一文件（包括目录文件）的权限做了不同的规定</p><p>在 Linux 中，每个文件都与一个所有者和一个组相关联，并为三类不同的用户分配访问权限：</p><ul><li>文件所有者</li><li>组成员</li><li>其他人</li></ul><p>每个文件都有三种权限类型：</p><ul><li>读取权限</li><li>写权限</li><li>执行权限</li></ul><p>此概念运行您指定运行哪些用户读取文件、写入文件或者执行文件。你可以使用 ls 命令查看文件权限：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ls</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> filename.txt</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@www /]# ls -l</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dr-xr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Dec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2012</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bin</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dr-xr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4096</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Apr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  2012</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> boot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">……</span></span></code></pre></div><p>bin 文件的第一个属性用 <code>d</code> 表示，<code>d</code> 在 Linux 中代表该文件是一个目录文件</p><p>在 Linux 中第一个字符表示这个文件是目录、文件或链接文件等等</p><ul><li><code>d</code>：目录</li><li><code>-</code>：文件</li><li><code>l</code>：链接文档</li><li><code>b</code>：接口设备</li><li><code>c</code>：端口设备，如鼠标、键盘</li></ul><p>接下来的字符中，以三个为一组，且均为 <strong>rwx</strong> 的三个参数的组合。其中， <strong>r</strong> 代表可读(read)、 <strong>w</strong> 代表可写(write)、 <strong>x</strong> 代表可执行(execute)。 要注意的是，这三个权限的位置不会改变，如果没有权限，就会出现减号 <strong>-</strong> 而已。</p><p>从左至右用 <strong>0-9</strong> 这些数字来表示。</p><p>第 <strong>0</strong> 位确定文件类型，第 <strong>1-3</strong> 位确定属主（该文件的所有者）拥有该文件的权限。</p><p>第 <strong>4-6</strong> 位确定属组（所有者的同组用户）拥有该文件的权限，第 <strong>7-9</strong> 位确定其他用户拥有该文件的权限。</p><p>其中，第 <strong>1、4、7</strong> 位表示读权限，如果用 <strong>r</strong> 字符表示，则有读权限，如果用 <strong>-</strong> 字符表示，则没有读权限；</p><p>第 <strong>2、5、8</strong> 位表示写权限，如果用 <strong>w</strong> 字符表示，则有写权限，如果用 <strong>-</strong> 字符表示没有写权限；第 <strong>3、6、9</strong> 位表示可执行权限，如果用 <strong>x</strong> 字符表示，则有执行权限，如果用 <strong>-</strong> 字符表示，则没有执行权限。</p><h2 id="更改文件属性" tabindex="-1">更改文件属性 <a class="header-anchor" href="#更改文件属性" aria-label="Permalink to &quot;更改文件属性&quot;">​</a></h2><p>在 Linux 中，我么通常使用以下四个命令来修改文件或目录的所属用户与权限：</p><ul><li>chown（change owner）：修改所属用户与组</li><li>chmod（change mode）：修改用户的权限</li><li>chgrp 修改文件和目录的所属组</li><li>touch 修改文件的时间戳</li><li></li></ul><p>Linux 文件的基本权限就有九个，分别是 <strong>owner/group/others(拥有者/组/其他)</strong> 三种身份各有自己的 <strong>read/write/execute</strong> 权限。</p><p>先复习一下刚刚上面提到的数据：文件的权限字符为： <strong>-rwxrwxrwx</strong> ， 这九个权限是三个三个一组的！其中，我们可以使用数字来代表各个权限，各权限的分数对照表如下：</p><ul><li>r:4</li><li>w:2</li><li>x:1</li></ul><p>每种身份(owner/group/others)各自的三个权限(r/w/x)分数是需要累加的，例如当权限为： <strong>-rwxrwx---</strong> 分数则是：</p><ul><li>owner = rwx = 4+2+1 = 7</li><li>group = rwx = 4+2+1 = 7</li><li>others= --- = 0+0+0 = 0</li></ul><p>所以等一下我们设定权限的变更时，该文件的权限数字就是 <strong>770</strong>。变更权限的指令 chmod 的语法是这样的：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chmod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [-R] xyz 文件或目录</span></span></code></pre></div><p>选项与参数：</p><ul><li><strong>xyz</strong> : 就是刚刚提到的数字类型的权限属性，为 <strong>rwx</strong> 属性数值的相加。</li><li><strong>-R</strong> : 进行递归(recursive)的持续变更，以及连同次目录下的所有文件都会变更</li></ul><h2 id="scp-上传下载文件目录" tabindex="-1">scp 上传下载文件目录 <a class="header-anchor" href="#scp-上传下载文件目录" aria-label="Permalink to &quot;scp 上传下载文件目录&quot;">​</a></h2><p>从服务器下载文件</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:/path/filename</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/www/local_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">本地地址</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>从服务器下载整个目录</p><p>加上 <code>-r</code>（directory 目录）</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:/path/remote_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">远程目录</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/var/www/local_dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">本地地址</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>上传本地文件至服务器</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/filename</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:/path/</span></span></code></pre></div><p>上传目录到服务器</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> local/dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username@servername:remote_dir</span></span></code></pre></div><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://www.myfreax.com/linux-tutorial/" target="_blank" rel="noreferrer">Linux 教程</a></li><li><a href="https://www.runoob.com/linux/linux-file-attr-permission.html" target="_blank" rel="noreferrer">Linux 文件基本属性</a></li></ul>`,59)]))}const g=i(t,[["render",n]]);export{c as __pageData,g as default};
