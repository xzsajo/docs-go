import{_ as i,c as t,a3 as a,o as l}from"./chunks/framework.CAwIQbWu.js";const L=JSON.parse('{"title":"SQLite","description":"","frontmatter":{},"headers":[],"relativePath":"BackEnd/SQLite.md","filePath":"BackEnd/SQLite.md","lastUpdated":1731245960000}'),r={name:"BackEnd/SQLite.md"};function n(o,e,s,d,S,c){return l(),t("div",null,e[0]||(e[0]=[a('<h1 id="sqlite" tabindex="-1">SQLite <a class="header-anchor" href="#sqlite" aria-label="Permalink to &quot;SQLite&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>SQLite是一个进程内的库，实现了自给自足的、无服务器的、零配置的、事务性的 SQL 数据库引擎。它是一个零配置的数据库，这意味着与其他数据库不一样，您不需要在系统中配置。</p><p>就像其他数据库，SQLite 引擎不是一个独立的进程，可以按应用程序需求进行静态或动态连接。SQLite 直接访问其存储文件。</p><h2 id="为什么要用-sqlite" tabindex="-1">为什么要用 SQLite？ <a class="header-anchor" href="#为什么要用-sqlite" aria-label="Permalink to &quot;为什么要用 SQLite？&quot;">​</a></h2><ul><li>不需要一个单独的服务器进程或操作的系统（无服务器的）。</li><li>SQLite 不需要配置，这意味着不需要安装或管理。</li><li>一个完整的 SQLite 数据库是存储在一个单一的跨平台的磁盘文件。</li><li>SQLite 是非常小的，是轻量级的，完全配置时小于 400KiB，省略可选功能配置时小于250KiB。</li><li>SQLite 是自给自足的，这意味着不需要任何外部的依赖。</li><li>SQLite 事务是完全兼容 ACID 的，允许从多个进程或线程安全访问。</li><li>SQLite 支持 SQL92（SQL2）标准的大多数查询语言的功能。</li><li>SQLite 使用 ANSI-C 编写的，并提供了简单和易于使用的 API。</li><li>SQLite 可在 UNIX（Linux, Mac OS-X, Android, iOS）和 Windows（Win32, WinCE, WinRT）中运行。</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>参考 <a href="https://www.runoob.com/sqlite/sqlite-installation.html" target="_blank" rel="noreferrer">菜鸟教程的安装步骤</a> 即可</p>',8)]))}const Q=i(r,[["render",n]]);export{L as __pageData,Q as default};
