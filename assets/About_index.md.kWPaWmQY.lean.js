import{_ as a,c as t,a3 as p,o as r}from"./chunks/framework.CAwIQbWu.js";const u=JSON.parse('{"title":"关于本网站","description":"","frontmatter":{},"headers":[],"relativePath":"About/index.md","filePath":"About/index.md","lastUpdated":1717146837000}'),o={name:"About/index.md"};function d(n,e,i,m,s,c){return r(),t("div",null,e[0]||(e[0]=[p('<h1 id="关于本网站" tabindex="-1">关于本网站 <a class="header-anchor" href="#关于本网站" aria-label="Permalink to &quot;关于本网站&quot;">​</a></h1><p>很多技术书会随着技术的变革而过时，往往在 3、4 年后，因为技术的迭代，书的内容就过时了，从而导致书读完却没什么用</p><p>如今是信息时代，知识是需要更新的，以前我们学习 JavaScript，也许只需要关心闭包，原型链等难点，但现在各种框架的诞生，以及 ES6 的普及，各种 UI 框架，跨平台应用的出现，一个前端所要掌握的技能远远不止这些</p><p>知识在变化，在流动，构建自己知识体系的时候，要记住知识不是一蹴而就的，总有原因，因为这个或那个缺点，导致你用新的东西，新的东西是为了解决效率问题，不然，它必然被淘汰</p><p>比如在 es module 还不主流时，amd 和 cmd 由社区大神开发，但 es module 慢慢被圈子接受时，这两种模块的使命就完成了</p><p>我记得一次面试中，面试官问 你知道 amd 模块原理是什么吗？当时我工作刚满 2 年（2018年），知道 amd 模块，也知道 amd 和 cmd 的区别，但是没深入研究过，加上其他问题，结果是面试没通过</p><p>反思一下，这真的是我的错吗？前端技术迭代这么快，你问一个老技术问题是不是你的问题呢？</p><p>技术面试面的到底是什么， Vue/React 源码？还是性能优化、算法，这些能体现一个程序员的什么能力</p><p>我很好奇，一个高级前端的标准是什么，是对源码的理解，还是 github star 数量，还是说背诵八股文？</p><p>只要我都回答好面试官的问题了，那就能通过了，那对口才不好的人是不是一种筛选</p><p>我已经八年前端了，在去年就开始转行做全栈开发，想着35岁噩梦也离自己越来越近，到底怎么才能避免内卷与面试呢</p><p>本网站的核心是对前端知识的整合，其中包括多本前端必看的书籍+多年的社区知识+自己的经验，如有疑问，请联系 <a href="mailto:t511069160@gmail.com" target="_blank" rel="noreferrer">t511069160@gmail.com</a></p><p>——写于 2024年5月31日</p>',13)]))}const f=a(o,[["render",d]]);export{u as __pageData,f as default};
