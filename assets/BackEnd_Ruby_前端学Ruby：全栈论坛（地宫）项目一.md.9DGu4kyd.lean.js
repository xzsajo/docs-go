import{_ as i,c as a,a3 as n,o as t}from"./chunks/framework.CAwIQbWu.js";const g=JSON.parse('{"title":"前端学Ruby：全栈论坛（地宫）项目一","description":"","frontmatter":{},"headers":[],"relativePath":"BackEnd/Ruby/前端学Ruby：全栈论坛（地宫）项目一.md","filePath":"BackEnd/Ruby/前端学Ruby：全栈论坛（地宫）项目一.md","lastUpdated":1714268888000}'),e={name:"BackEnd/Ruby/前端学Ruby：全栈论坛（地宫）项目一.md"};function p(l,s,h,k,r,d){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="前端学ruby-全栈论坛-地宫-项目一" tabindex="-1">前端学Ruby：全栈论坛（地宫）项目一 <a class="header-anchor" href="#前端学ruby-全栈论坛-地宫-项目一" aria-label="Permalink to &quot;前端学Ruby：全栈论坛（地宫）项目一&quot;">​</a></h1><p>本来想做 <a href="https://github.com/johanazhu/buddha" target="_blank" rel="noreferrer">buddha</a>（菩萨）论坛的，发现自己参考的项目太难实现，猝</p><p>笔者回炉重修了一番，正好发现了 realworld，遂决定将 realworld 项目代替原先的 buddha 项目，还是要量力而行，不要一意孤行（项目规划太大，浪费太多时间学习）</p><p>先介绍一下 realworld 项目</p><p>源码：<a href="https://github.com/gothinkster/realworld" target="_blank" rel="noreferrer">https://github.com/gothinkster/realworld</a></p><p>demo：<a href="https://demo.realworld.io/#/" target="_blank" rel="noreferrer">https://demo.realworld.io/#/</a></p><p>UI：<a href="https://github.com/gothinkster/conduit-bootstrap-template" target="_blank" rel="noreferrer">https://github.com/gothinkster/conduit-bootstrap-template</a></p><p>页面分析：<a href="https://www.jianshu.com/p/6014a9fefabd" target="_blank" rel="noreferrer">https://www.jianshu.com/p/6014a9fefabd</a></p><p>从页面角度讲，只有七个页面，即</p><ul><li>首页（index）</li><li>文章详情页（article）</li><li>登录页（login）</li><li>注册页（register）</li><li>写文章页（editor）</li><li>设置页（settings）</li><li>个人页（profile）</li></ul><p>接口方面和数据结构直接看 <a href="https://realworld-docs.netlify.app/docs/specs/backend-specs/endpoints" target="_blank" rel="noreferrer">文档</a> 就好，不说虚的，这个项目有19个接口，19个接口放其他语言要做多久？不知道，但 Ruby 应该花不了多少时间</p><p>介于此项目是个全栈项目，遂会前后端穿插地写，项目名我起好了：地宫（Underground Palace）</p><h2 id="文章目录" tabindex="-1">文章目录 <a class="header-anchor" href="#文章目录" aria-label="Permalink to &quot;文章目录&quot;">​</a></h2><p>搭建项目并部署</p><p>使用脚手架创建 article</p><p>穿上 bootstrap</p><p>新增fontawesome</p><p>device 用户体系</p><p>devise-i18n国际化</p><p>设置页</p><p>个人页</p><p>模型建立</p><p>查询功能</p><p>订阅功能</p><p>分页功能</p><p>再次部署</p><p>logo设计</p><p>后记</p><h2 id="搭建项目并部署" tabindex="-1">搭建项目并部署 <a class="header-anchor" href="#搭建项目并部署" aria-label="Permalink to &quot;搭建项目并部署&quot;">​</a></h2><p>我们先新建项目</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> underground-palace</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><p>然后去 <code>config/routes.rb</code> 中修改根目录：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Defines the root path route (&quot;/&quot;)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # root &quot;articles#index&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  root </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rails/welcome#index&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>我们通过 fly.io 来部署我们的服务，对其不过多介绍，具体可看上篇文章——<a href="./前端学Ruby：唐诗项目部署优化.html">前端学Ruby：唐诗项目部署优化</a></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deploy</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 部署</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 打开刚刚部署的项目</span></span></code></pre></div><p><img src="https://s2.loli.net/2023/03/23/OozjlXx2UpvI4Wd.png" alt="fly launch"></p><p>此时访问 <code>https://underground-palace.fly.dev/</code> （这里我们的 underground 少写了一个字母，无伤大雅，后续已修正）就能看到刚还在本地新建的项目，是不是很快，有点意想不到的感觉</p><h2 id="使用脚手架创建-article" tabindex="-1">使用脚手架创建 article <a class="header-anchor" href="#使用脚手架创建-article" aria-label="Permalink to &quot;使用脚手架创建 article&quot;">​</a></h2><p>rails 的一个特点是一个命令就做很多事情，例如接下来我们要用 <code>rails generate scaffold</code> 完成 article 的增删改查</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scaffold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> article</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> title:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> description:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> body:text</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 数据迁入</span></span></code></pre></div><p>并且修改<code>config/routes.rb</code> ：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:articles</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Define your application routes per the DSL in https://guides.rubyonrails.org/routing.html</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Defines the root path route (&quot;/&quot;)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  root </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;articles#index&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # root &quot;rails/welcome#index&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>如此，用脚手架搭建的文章的增删改查就完成了，是不是很快</p><p><img src="https://s2.loli.net/2023/03/23/a7Hzw4iNLcWGtMh.gif" alt="增删改查"></p><h2 id="穿上-bootstrap" tabindex="-1">穿上 bootstrap <a class="header-anchor" href="#穿上-bootstrap" aria-label="Permalink to &quot;穿上 bootstrap&quot;">​</a></h2><p>realworld 项目是基于 bootstrap 的，我们需要下载 bootstrap 的 gem</p><p>这里需要做一下说明，像 <a href="https://www.ruby-toolbox.com/projects/bootstrap-sass" target="_blank" rel="noreferrer">bootstrap-sass</a> gem 是基于 bootstrap 3 的样式，<a href="https://www.ruby-toolbox.com/projects/bootstrap" target="_blank" rel="noreferrer">bootstrap</a> gem 是最新版的 boostrap，也可以理解为 bootstrap 3 及一下可使用 bootstrap-sass，反之则用 boostrap</p><p>因为 realworld 是基于 bootstrap4.0.0，所以下载时我们需要先设定好版本。按照 <a href="https://www.ruby-toolbox.com/projects/bootstrap" target="_blank" rel="noreferrer">readme</a> 的步骤，在 gemfile 文件中引入 <code>boostrap</code> 和 <code>jquery-rails</code> 包，再新增 <code>common/footer</code> 和 <code>common/header</code> 页面，将模板代码放进去</p><p>但是 readlworld 所提供的 <a href="https://github.com/gothinkster/conduit-bootstrap-template" target="_blank" rel="noreferrer">bootstrap</a> 和 <a href="https://demo.realworld.io/#/" target="_blank" rel="noreferrer">线上版本 </a>有差异，并不是直接引用能用（后续看到文档中有现成的 <a href="https://realworld-docs.netlify.app/docs/specs/frontend-specs/templates" target="_blank" rel="noreferrer">模板</a>，但不知道有没有坑）</p><p>既然选择了做用 bootstrap 来做UI，索性用最新的 bootstrap5</p><p>我们不按照 gem 方式引入 bootstrap，用 <code>cssbundling-rails</code>、<code> jsbundling-rails</code> 来构建资源</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>bundle add cssbundling-rails jsbundling-rails</span></span></code></pre></div><p>查找我们与 css 相关的构建命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> css</span></span></code></pre></div><p><img src="https://s2.loli.net/2023/03/27/OiI8AeSd3LNh1Do.png" alt="查看css"></p><p>同理查看我们与 javascript 构建相关的命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> javascript</span></span></code></pre></div><p>我们下载 bootstrap，基于 yarn</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> css:install:bootstrap</span></span></code></pre></div><p>下载 esbuild，也是基于yarn下载，</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> javascript:install:esbuild</span></span></code></pre></div><p>但是报错 <code>Could not resolve &quot;app/javascript/*.*&quot;</code></p><p><img src="https://s2.loli.net/2023/03/27/4hiOd5HpMQujIWJ.png" alt="window中下载esbuild报错"></p><p>不用慌，去<code>package.json</code> 修改 build 中的配置，将<code>esbuild app/javascript/*.* --bundle --sourcemap... </code> 改成 <code>esbuild app/javascript/application.js --bundle --sourcemap...</code></p><p>并执行 <code>npm run build</code> 执行代码，当然，有些文件需要隐藏的这里不做过多描述</p><p>当能 build 成功后，我们开发就是用<code>bin/dev</code> 命令来开发</p><p>但因为笔者使用的是 window 系统，所以会因此报错：</p><p><img src="https://s2.loli.net/2023/03/27/4XlimQv5stJSKjr.png" alt="unset为linux命令，报错"></p><p><code>unset</code> 不是 window 的命令，所以我们要改造，前往根目录下的 <code>Procfile.dev</code> 修改：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>web: set &quot;PORT=&quot; &amp;&amp; rails s</span></span>
<span class="line"><span>css: yarn build:css --watch</span></span>
<span class="line"><span>js: yarn build --watch</span></span></code></pre></div><p>此时执行 <code>/bin/dev</code> 就能启动我们的项目了，其以上代码是启动 rails 服务，css 和 js 都是通过 yarn build 打包后监听（watch）变化，所以能做到热更新</p><h2 id="新增fontawesome" tabindex="-1">新增fontawesome <a class="header-anchor" href="#新增fontawesome" aria-label="Permalink to &quot;新增fontawesome&quot;">​</a></h2><p>按照好 bootstrap 后还不够，还需要安装图标，例如我们常用的fontawesome</p><p>首先安装 Font Awesome：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> @fortawesome/fontawesome-free</span></span></code></pre></div><p>然后在 <code>config/initializers/assets.rb</code> 添加以下内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Rails.application.config.assets.paths</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Rails.root.join(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&#39;node_modules/@fortawesome/fontawesome-free/webfonts&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>最后在 <code>app/assets/stylesheets/application.sass.scss</code> 添加以下内容：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$fa-font-path: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@fortawesome/fontawesome-free/scss/fontawesome.scss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;@fortawesome/fontawesome-free/scss/solid.scss&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>接着就是把具体的 <code>articles</code>、<code>articles#show</code>、<code>articles#new</code>页面的模板样式补充好</p><h2 id="用户体系" tabindex="-1">用户体系 <a class="header-anchor" href="#用户体系" aria-label="Permalink to &quot;用户体系&quot;">​</a></h2><p>我们使用 <a href="https://www.ruby-toolbox.com/projects/devise" target="_blank" rel="noreferrer">devise</a> 来做我们的登录注册</p><p>安装 <code>devise</code> gem 包</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise</span></span></code></pre></div><p>运行以下命令生成 Devise 文件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise:install</span></span></code></pre></div><p>创建一个用户模型（例如<code>User</code>），并运行以下命令生成 Devise 所需要的视图和控制器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span></span></code></pre></div><p>运行数据库迁移以创建 Devise 所需要的表</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span></span></code></pre></div><p>如此这般，登录注册忘记密码等一系列 CRUD 就做好了，我们只需要在 <code>header.html.erb</code> 中修改配置，将未登录时显示登录注册样式即可，即</p><div class="language-erb vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">erb</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">current_user %&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        &lt;!-- 未登录 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;col-md-3 text-end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;%= link_to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;注册&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, new_user_registration_path, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;btn btn-outline-primary me-2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          &lt;%= link_to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;登入&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, new_user_session_path, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;btn btn-primary&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> &lt;!-- 登录 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span></code></pre></div><p>默认情况下，我们是看不到 devise 的视图和控制器的，因为我们要修改 UI，所以将视图释放出来：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise:views</span></span></code></pre></div><p>前往视图层，修改<code>views/devise/registrations/new.html.erb</code> （注册页）和<code>views/devise/session/new.html.erb</code>（登录页）的样式</p><p>默认情况下，注册、登录的路由是<code>users/sign_up</code> 和<code>users/sign_in</code>，和传统意义上的注册、登录路由不符，这里做一下映射，前往<code>config/routes.rb</code>中修改：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devise_scope </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:user</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devise_scope </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/login&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;devise/sessions#new&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/register&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;devise/registrations#new&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  +</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>并前往<code>views/common/_header.html.erb</code> 中修改代码：</p><div class="language-erb vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">erb</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- 未登录 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;col-md-3 text-end&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;%= link_to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;注册&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, register_path, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;btn btn-outline-primary me-2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;%= link_to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;登入&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, login_path, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;btn btn-primary&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>静态页面放进后，现在我们要考虑的是将其动态化，首先改造的是注册页面，我们用<code>form_for</code> 来做表单，这里需要注意的是，在 devise 默认的字段里没有 username，我们需要加上</p><p>创建一个 migration 文件，用于向 User 模型添加 username 字段</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AddUsernameToUser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> username:string:uniq</span></span></code></pre></div><blockquote><p>uniq表示唯一</p></blockquote><p>将这个 migration 迁移至数据库</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span></span></code></pre></div><p>在 <code>models/user.rb</code> 中新增对 username 的验证</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationRecord</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # Include default devise modules. Others available are:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # :confirmable, :lockable, :timeoutable, :trackable and :omniauthable</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  devise </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:database_authenticatable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:registerable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">         :recoverable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:rememberable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:validatable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  validates </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">presence:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">uniqueness:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">case_sensitive:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">minimum:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximum:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><ul><li><code>presence: true</code> 验证：该属性必须存在（不能为 <code>nil</code> 或空白字符串）</li><li><code>uniqueness: { case_sensitive: false }</code> 验证：该属性的值必须是唯一的（即数据库中不存在相同的值）。此外，该验证规则将忽略大小写，因此类似的两个字符串，例如 <code>abc</code> 和 <code>ABC</code>，将被认为是相等的</li><li><code>length: { minimum: 3, maximum: 25 }</code> 验证：该属性的长度必须介于 3 到 25 个字符之间</li></ul><p>修改注册页面视图，新增用户名样式</p><div class="language-erb vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">erb</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;%= form_for(resource, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> resource_name, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">url:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> registration_path(resource_name)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |f| %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;form-group mb-3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;%= f.text_field </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autofocus:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autocomplete:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;form-control form-control-lg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    placeholder:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;用户名&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span></code></pre></div><p>在改造时，我们还需要生成 devise 的控制器，让表单在提交时前往正确的控制器处（因为我们定制了登录注册路径，而不是用默认的，所以还要改造）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise:constroller</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 生成所有 devise 的控制器</span></span></code></pre></div><p>再在 <code>config/routes.rb</code> 中修改</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devise_for </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:users</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">path_names:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    sign_in:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;login&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    sign_out:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;logout&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    sign_up:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;register&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">controllers:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    registrations:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;users/registrations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    sessions:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;users/sessions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  devise_scope </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:user</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/login&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;devise/sessions#new&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/register&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;devise/registrations#new&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ...</span></span></code></pre></div><p>如此，注册页面就改造完了，继续改造登录页面</p><h2 id="devise-i18n国际化" tabindex="-1">devise-i18n国际化 <a class="header-anchor" href="#devise-i18n国际化" aria-label="Permalink to &quot;devise-i18n国际化&quot;">​</a></h2><p>当我们做完登录页之后，提示报错信息还都是英文的，这次需要引入 i18n 来做中文提示</p><p>老规矩，先安装 <code>devise-i18n</code> gem</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bundle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise-i18n</span></span></code></pre></div><p>在 <code>config/application.rb</code> 文件中添加如下代码：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config.i18n.default_locale </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;zh-CN&quot;</span></span></code></pre></div><p>执行 devise:i18n 生成中文命令</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> devise:i18n:locale</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zh-CN</span></span></code></pre></div><p>再去<code>config/locales/devise.zh-CN.yml</code> 中修改不满意的翻译，如此就完成了国际化</p><p>如此我们已经完成了5个页面，即首页、文章详情页、登录页、注册页、写文章页，还剩下设置页和个人页</p><h2 id="设置页" tabindex="-1">设置页 <a class="header-anchor" href="#设置页" aria-label="Permalink to &quot;设置页&quot;">​</a></h2><p>如果说 article 和 user 是通过命令行来生成的，那么接下来的两个页面（设置、个人页），就是我们正常开发时的开发流程</p><p>先创建一个 Settings 控制器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Settings</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> index</span></span></code></pre></div><p>在 <code>config/routes.rb</code> 中新增一个 &quot;seetings&quot; （单数资源）资源路由，开放 show 和 update ：</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">resource </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">only:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><p>创建 <code>app/views/settings/index.html.erb</code> 页面，加上 bootstrap 样式，settings 的静态页面就能访问了</p><p>看静态页面我们就知道，users 数据中我们还缺少头像（avatar）和简介（bio），所以我们需要在 users 表中新增两个字段</p><p>生成一个迁移文件，该文件添加 avatar 和 bio 列到 users 表中</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AddAvatarAndBioToUsers</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> avatar:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bio:string</span></span></code></pre></div><p>运行 <code>rails db:migrate</code> 修改数据库中的表</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span></span></code></pre></div><p>接着我们前往 <code>settings_controller.rb</code> 控制器，修改为后续渲染页面</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SettingsController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationController</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    before_action </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:authenticate_user!</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    before_action </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:set_user</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> show</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> update</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">       if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @user.update(user_params)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            # 后续跳转到个人设置页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            redirect_to root_path</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            flash[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:notice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;修改成功&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        else</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            render </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:show</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> set_user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      @user </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> current_user</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> user_params</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        params.require(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).permit(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:username</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:avatar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:bio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>同样，视图也要修改，删除更改密码一栏，为什么呢？因为 devise 中修改密码，需要输入原密码，是很麻烦的，笔者尝试了一下，放弃了</p><h2 id="个人页" tabindex="-1">个人页 <a class="header-anchor" href="#个人页" aria-label="Permalink to &quot;个人页&quot;">​</a></h2><p>我们继续做个人页，也是我们的最后一个页面，虽然还有很多细节（比如评论、点赞文章、收藏文章等逻辑），但是从页面的角度讲，这就是最后一个页面了</p><p>先建立控制器</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> profile</span></span></code></pre></div><p>在 <code>config/routes.rb</code> 处，新增一个路由映射</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/:name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;profile#show&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :profile</span></span></code></pre></div><p>前往<code>views/common/_header.html.erb</code> 处，修改原来的 username 视图</p><div class="language-erb vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">erb</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nav-item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;%= link_to profile_path(current_user.username), </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;nav-link px-2&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;%= image_tag current_user.avatar, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">alt:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;avatar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">class:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;user-pic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;%= current_user.username %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;% </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> %&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">li</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>然后我们去 <code>view/profile/show.html.erb</code> 写好我们的静态页面，7个页面就此完成，但这只完成了一半。接下来，我们要对页面进行改造，加上文章评论、点赞/取消点赞、关注/取消用户等等功能</p><p>如此，已经耗尽一天功夫，休息一晚，明天再战</p>`,150)]))}const c=i(e,[["render",p]]);export{g as __pageData,c as default};
