import{_ as s,c as a,a3 as l,o as e}from"./chunks/framework.CAwIQbWu.js";const E=JSON.parse('{"title":"RESTful","description":"","frontmatter":{},"headers":[],"relativePath":"HTTP/restful.md","filePath":"HTTP/restful.md","lastUpdated":1676881906000}'),t={name:"HTTP/restful.md"};function n(h,i,r,p,k,d){return e(),a("div",null,i[0]||(i[0]=[l(`<h1 id="restful" tabindex="-1">RESTful <a class="header-anchor" href="#restful" aria-label="Permalink to &quot;RESTful&quot;">​</a></h1><h2 id="restful-api-是什么" tabindex="-1">RESTful API 是什么？ <a class="header-anchor" href="#restful-api-是什么" aria-label="Permalink to &quot;RESTful API 是什么？&quot;">​</a></h2><h3 id="什么是-rest" tabindex="-1">什么是 REST <a class="header-anchor" href="#什么是-rest" aria-label="Permalink to &quot;什么是 REST&quot;">​</a></h3><p>REST 的全称是 Representational state transfer</p><ul><li>Representational：数据的表现形式（JSON、XML...）</li><li>state：当前状态或者数据</li><li>transfer：数据传输</li></ul><p>它描述了一个系统如何与另一个交流。比如一个产品的状态（名字，详情）表现为 XML，JSON 或者普通文本</p><p>REST 有六个约束：</p><ul><li>Client—Server（客户端——服务器端）</li><li>Stateless（无状态）</li><li>Cache（缓存）</li><li>Uniform Interface（统一接口）</li><li>Layered System（分层系统）</li><li>Code-On-Demand（按需代码）</li></ul><h3 id="最佳实践" tabindex="-1">最佳实践 <a class="header-anchor" href="#最佳实践" aria-label="Permalink to &quot;最佳实践&quot;">​</a></h3><h4 id="请求设计规范" tabindex="-1">请求设计规范 <a class="header-anchor" href="#请求设计规范" aria-label="Permalink to &quot;请求设计规范&quot;">​</a></h4><ul><li>URI 使用名词，尽力使用复数，如 /users</li><li>URI 使用 嵌套 表示 关联关系，如 /users/123/repos/234</li><li>使用 正确的 HTTP 方式，如 GET/POST/PUT/DELETE</li></ul><h4 id="相应设计规范" tabindex="-1">相应设计规范 <a class="header-anchor" href="#相应设计规范" aria-label="Permalink to &quot;相应设计规范&quot;">​</a></h4><ul><li>查询</li><li>分页</li><li>字段过滤</li></ul><p>如果记录数量很多，服务器不可能都将它们返回给用户。API 应该提供参数，过滤返回结果。如以下代码参考：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">limit</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10:指定返回记录的数量</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">offest</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">10:指定返回记录的开始位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;pre_page</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">100:指定第几页，以及每页的记录数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sortby</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&amp;order</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asc:指定返回结果按照哪个属性排序，以及排序顺序</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">animal_type_id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">1:指定筛选条件</span></span></code></pre></div><ul><li>状态码</li><li>错误处理</li></ul><p>就像 HTML 的错误页面向访问者展示了有用的错误消息一样，API 也应该用之前清晰易读的格式来提供有用的错误消息</p>`,17)]))}const u=s(t,[["render",n]]);export{E as __pageData,u as default};
