import{_ as a,c as l,a3 as t,o as r}from"./chunks/framework.CAwIQbWu.js";const d=JSON.parse('{"title":"性能优化方方面面","description":"","frontmatter":{},"headers":[],"relativePath":"Performance/index.md","filePath":"Performance/index.md","lastUpdated":1722850347000}'),i={name:"Performance/index.md"};function p(o,e,n,c,h,s){return r(),l("div",null,e[0]||(e[0]=[t('<h1 id="性能优化方方面面" tabindex="-1">性能优化方方面面 <a class="header-anchor" href="#性能优化方方面面" aria-label="Permalink to &quot;性能优化方方面面&quot;">​</a></h1><blockquote><p>这个世界贫富两极分化的根源是制度成本被弱势群体所承担，而制度收益被强势群体所占有</p><p>——温铁军</p></blockquote><p>面试里只要你简历上写了把网站速度提升了 XX%，大多面试官会问你具体做了什么，有什么指标？</p><p>这个点可以深入聊出很多东西</p><p>我们做性能优化的原因是希望网站能快速访问，就像日本人通过<a href="http://abehiroshi.la.coocan.jp/" target="_blank" rel="noreferrer">阿部宽的网站</a>来测试网络是否正常，我想如果（前端）开发将一个网站优化到秒进，那对其是很大的褒奖</p><p>现代前端应该做些什么方面的性能优化呢？这一章，我们讲讲性能优化的方方面面</p><p>笔者认为性能优化无外乎分为：</p><ul><li><p><a href="./网络层面优化.html">网络层面优化</a></p><ul><li>如 HTTP 缓存、HTTP2 多路复用</li></ul></li><li><p><a href="./工程化层面优化.html">工程化层面优化</a></p><ul><li>以前一些常规的资源合并、压缩都可以在 webpack 中进行</li><li>以及 webpack 自身的打包优化以及构建优化</li></ul></li><li><p><a href="./React层面优化.html">React层面优化</a></p><ul><li>笔者只懂 React，这里只讲解 React 的优化，如懂 Vue 换 Vue 即可</li></ul></li><li><p><a href="./页面渲染层面优化.html">页面渲染层面优化</a></p><ul><li>回流和重绘、防抖、节流</li><li>主要从浏览器渲染讲起，降如何优化</li></ul></li></ul><p>最后我们会<a href="./性能优化从零到一.html">总结</a>一下前端性能优化的知识点，如此，本章就结束了</p>',9)]))}const f=a(i,[["render",p]]);export{d as __pageData,f as default};
