import{_ as e,c as r,a3 as o,o as t}from"./chunks/framework.CAwIQbWu.js";const b=JSON.parse('{"title":"loader以及原理解析","description":"","frontmatter":{},"headers":[],"relativePath":"webpack/loader以及原理解析.md","filePath":"webpack/loader以及原理解析.md","lastUpdated":1723545460000}'),l={name:"webpack/loader以及原理解析.md"};function d(i,a,s,n,c,p){return t(),r("div",null,a[0]||(a[0]=[o('<h1 id="loader以及原理解析" tabindex="-1">loader以及原理解析 <a class="header-anchor" href="#loader以及原理解析" aria-label="Permalink to &quot;loader以及原理解析&quot;">​</a></h1><h2 id="load原理" tabindex="-1">Load原理 <a class="header-anchor" href="#load原理" aria-label="Permalink to &quot;Load原理&quot;">​</a></h2><p>一个 loader 可以是一个普通函数</p><p>一个 loader 也可以是一个异步函数</p><h4 id="单一职责原则" tabindex="-1">单一职责原则 <a class="header-anchor" href="#单一职责原则" aria-label="Permalink to &quot;单一职责原则&quot;">​</a></h4><p>webpack 里每个 loader 只做一件事</p><p>目前我们的 css-loader 做了两件事</p><p>一是把 CSS 变为 JS 字符串</p><p>二是把 JS 字符串放到 style 标签里</p><h4 id="raw-loader-源码" tabindex="-1">raw-loader 源码 <a class="header-anchor" href="#raw-loader-源码" aria-label="Permalink to &quot;raw-loader 源码&quot;">​</a></h4><p><a href="https://github.com/webpack-contrib/raw-loader/" target="_blank" rel="noreferrer">https://github.com/webpack-contrib/raw-loader/</a></p><p>20行</p><h4 id="css-loader-源码" tabindex="-1">css-loader 源码 <a class="header-anchor" href="#css-loader-源码" aria-label="Permalink to &quot;css-loader 源码&quot;">​</a></h4><p><a href="https://github.com/webpack-contrib/css-loader" target="_blank" rel="noreferrer">https://github.com/webpack-contrib/css-loader</a></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://juejin.cn/post/6844903935413583880" target="_blank" rel="noreferrer">为什么 webpack4 默认支持 ES6 语法的压缩？</a></li><li><a href="https://mp.weixin.qq.com/s/8oDENjCOsXxlA2fyuIN4GA" target="_blank" rel="noreferrer">手把手带你入门 Webpack Plugin</a></li><li><a href="https://mp.weixin.qq.com/s/T9H5HYpo-MBgZiSnaHTi0A" target="_blank" rel="noreferrer">Webpack - 手把手教你写一个 loader / plugin</a></li></ul>',16)]))}const u=e(l,[["render",d]]);export{b as __pageData,u as default};
