import{_ as i,c as a,a3 as n,o as l}from"./chunks/framework.CAwIQbWu.js";const F=JSON.parse('{"title":"前端学 Ruby：熟悉Rails","description":"","frontmatter":{},"headers":[],"relativePath":"BackEnd/Ruby/前端学Ruby：熟悉Rails.md","filePath":"BackEnd/Ruby/前端学Ruby：熟悉Rails.md","lastUpdated":1736435697000}'),h={name:"BackEnd/Ruby/前端学Ruby：熟悉Rails.md"};function p(t,s,e,k,r,d){return l(),a("div",null,s[0]||(s[0]=[n(`<h1 id="前端学-ruby-熟悉rails" tabindex="-1">前端学 Ruby：熟悉Rails <a class="header-anchor" href="#前端学-ruby-熟悉rails" aria-label="Permalink to &quot;前端学 Ruby：熟悉Rails&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>一句话介绍，看 <a href="https://ruby-china.github.io/rails-guides/" target="_blank" rel="noreferrer">Rails Guides</a> 即可</p><h2 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文" aria-label="Permalink to &quot;正文&quot;">​</a></h2><p>Rails 是使用 Ruby 语言编写的 Web 应用开发框架，如同 Node 中的 Express、Koa，Python 中的 Django、Flash。但相比其他，它更强大</p><p>Rails 哲学包含两大指导思想：</p><ul><li>不要自我重复（DRY）</li><li>多约定，少配置（约定优于配置）</li></ul><p>因为它约定优于配置的设计，从而可以使 Rails 应用几乎不需要任何配置文件。有人曾经这样比喻过，Rails 框架仿佛一台傻瓜相机，只需要简单练习就可以照出相片，但意味着摄影者完全相信相机的设定。笔者也是这么认为的，所谓数码（单反或无反）相机，大多数爱好者也只是用自动挡，还不如用手机或者傻瓜相机拍的好</p><h2 id="rails-中的-mvc" tabindex="-1">Rails 中的 MVC <a class="header-anchor" href="#rails-中的-mvc" aria-label="Permalink to &quot;Rails 中的 MVC&quot;">​</a></h2><p>Rails 能讲的东西太多了，MVC思想，严格的分层理论，ORM机制，页面模板技术，页面装饰技术……</p><p>笔者这里做笔记时摘要其中最重要 MVC 思想，MVC不用过多介绍，即模型、视图、控制器</p><ul><li>模型 Model：对数据库的数据进行操作</li><li>视图 View：显示数据</li><li>控制器 Controller：调度模型，将数据展示给视图</li></ul><p>我们曾经在 <a href="https://docs-go.vercel.app/Browser/%E4%BB%8Eurl%E8%BE%93%E5%85%A5%E5%88%B0%E8%BF%94%E5%9B%9E%E8%AF%B7%E6%B1%82%E7%9A%84%E8%BF%87%E7%A8%8B.html" target="_blank" rel="noreferrer">从 url 输入到返回请求的过程 </a> 一文中介绍过请求的全过程，当用户请求到服务器时，Rails 是怎么做的，它通过 Routing 接受所有的请求，如果匹配到，进入相应控制器，然后再控制器中执行其中的代码，一般来说，是控制器操作 Model 数据，拿到数据后，返回给 View</p><p>整个 Rails web 应用正如下面这幅图所示：</p><p><img src="https://s2.loli.net/2023/01/16/PpTzmDa1fFjk4eh.png" alt="rails结构"></p><p>当用户通过浏览器输入网站地址时，可以理解为访问了网站服务器，Rails 框架的入口会去路由处匹配 url。如果匹配正确，前往对应的控制器（Controller） 处，控制器中我们可以定义方法，方法中去操作模型（Modal），因为模型是继承 ActiveRecord 类，它能提供你对数据库进行增删改查，当控制器拿到数据后以视图形式展示，当然，也可以是以 json 形式返回。如果是以视图形式返回，视图通过特定语法（&lt;%= %&gt;）展示数据</p><p>例如，我们要访问一个书的列表页</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BooksController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationController</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> index</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        @books </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Book</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.all</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>其中，BooksController 就是我们的控制器，在类中定义 index 方法，方法中的 Book 即继承 ActiveRecord 后的 Book Model 模型，Book.all 即查询数据（Model）中所有的书，index 方法名对应的时 <code>views/books/index.html.erb</code>，而 <code>@books</code> 以通过模型查询到的数据体现在视图上</p><p>上述讲到的内容是任何Web框架中都进行的事情，不过，Rails 将其全整合了，我全都有，你用就好</p><h2 id="model-模型-⭐" tabindex="-1">Model（模型）⭐ <a class="header-anchor" href="#model-模型-⭐" aria-label="Permalink to &quot;Model（模型）⭐&quot;">​</a></h2><p><a href="https://ruby-china.github.io/rails-guides/active_record_basics.html" target="_blank" rel="noreferrer">相关文档</a></p><p>在整个MVC中，笔者觉得最难的当属 Model，Rails 的 Model 是基于 ActiveRecord，ActiveRecord 就是一个 ORM（对象关系映射） 工具。它的作用就是数据库的高级封装、简单说就是不使用 SQL 语句就可以操作数据库</p><p>数据库表就是一个类，行记录就是实例对象，字段就是对象的属性</p><ul><li><p>数据库-ActiveRecord- 例子</p></li><li><p>表-类-articles</p></li><li><p>行-实例对象-<code>obj={id:1, title:&#39;标题&#39;, desc: &#39;描述&#39;}</code></p></li><li><p>字段-对象属性-<code>obj.title</code></p></li></ul><blockquote><p>这里需要注意的是：Rails 中的模型类名是单数，查找的数据表为复数。例如模型类名为 Article，数据表是 articles</p></blockquote><p>实际中的基本操作</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> userName:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> email:string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 user 模型，模型为 user，数据库中会以 users 展示</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 进入命令行控制台</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 创建</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User.new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">userName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan101@.qq.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@user.save</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 还有一种是 create，创建记录，并存在数据库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  User.create</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">userName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan101@.qq.com&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 读取</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取所有的用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">users</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User.all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回第一个用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User.first</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 返回第一个名为 johan 的用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">johan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User.find_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 更新</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User.find_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user.name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;elaine&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user.save</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者是直接用关键字 update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user.update(name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;elaine&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除所有用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">User.destroy_all</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除名为 johan 的用户</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> User.find_by</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user.destroy</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 其他</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># find(*args)：根据主键查询特定记录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># find_by_sql(sql)：根据SQL语句查询</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># exists?(id)：判断指定ID的记录是否存在</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># create(attributes)：新增一条记录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># update(id, attributes)：根据ID来修改指定记录</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># update_all(updates, conditions)：根据条件来修改一批记录</span></span></code></pre></div><h3 id="数据验证" tabindex="-1">数据验证 <a class="header-anchor" href="#数据验证" aria-label="Permalink to &quot;数据验证&quot;">​</a></h3><p>在存入数据前，后端要对数据进行判断，如果你什么都没填就提交了，那不是乱搞吗，所以一般都要对传入的值进行判断，是否为空，字符太少，要求是手机号码、身份证、各种正则...</p><p>在 Rails 中，在 Model 就提供了相关的方法</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationRecord</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  validates </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">presence:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">minimum:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 不能为空，长度最少是2个字符</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  validates </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">presence:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">maximun:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 255</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">format:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    	with:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> EMAIL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">uniqueness:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">case_sensitive:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :create</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建的时候该数据是唯一的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p><a href="https://ruby-china.github.io/rails-guides/active_record_validations.html" target="_blank" rel="noreferrer">相关文档</a>，关键还是要看文档，内容太多了</p><h3 id="回调-生命周期" tabindex="-1">回调（生命周期） <a class="header-anchor" href="#回调-生命周期" aria-label="Permalink to &quot;回调（生命周期）&quot;">​</a></h3><p>在创建、保存、更新、删除、验证或从数据库中加载 Active Record 对象时执行的代码</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> User</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ApplicationRecord</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  validates </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:email</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">presence:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  before_validation </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:ensure_login_has_a_value</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  private</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ensure_login_has_a_value</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> login.nil?</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        self</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.login </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">unless</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> email.blank?</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>可用的回调包括：before_validation、before_create、after_create、after_save、before_save、after_update、before_destroy、after_destroy 等等</p><p>具体可看<a href="https://ruby-china.github.io/rails-guides/active_record_callbacks.html" target="_blank" rel="noreferrer">文档</a></p><h3 id="迁移" tabindex="-1">迁移 <a class="header-anchor" href="#迁移" aria-label="Permalink to &quot;迁移&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 生成迁移文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CreateJoinTableCustomerProduct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> customer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> product</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 迁移</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 版本回滚</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:rollback</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> step=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span></span></code></pre></div><p>这里在学习的时候，遇到一个东西，困惑了半天，那就是外键，外键用于两个表之间一对多关系。一个用户能写多篇文章，所以 article model belongs_to，而 user model has_many。</p><h3 id="关联" tabindex="-1">关联 <a class="header-anchor" href="#关联" aria-label="Permalink to &quot;关联&quot;">​</a></h3><p>关联的类型有六种：belongs_to、has_one、has_many、has_many :through、has_one :through、has_and_belongs_to_many</p><p>has_many 与 belongs_to 是什么意思？</p><p>has_many 拥有很多</p><p>belongs_to 属于</p><p>例如，一篇文章可以拥有很多评论，一则评论属于某篇文章</p><h2 id="view-视图" tabindex="-1">View（视图） <a class="header-anchor" href="#view-视图" aria-label="Permalink to &quot;View（视图）&quot;">​</a></h2><p><a href="https://ruby-china.github.io/rails-guides/layouts_and_rendering.html" target="_blank" rel="noreferrer">相关文档</a></p><p>视图相对简单，这里提几个笔者在开发时遇到的坑定：</p><p>LInk_to 的用法</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h1&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @article.title </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">%&gt;&lt;/h1&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> image_tag @article.cover_image.url </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">%&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;p&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @article.content </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">%&gt;&lt;/p&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;%=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> link_to </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Edit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, edit_article_path(@article) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Current</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.user.admin? </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">%&gt;</span></span></code></pre></div><h2 id="controller-控制器" tabindex="-1">Controller（控制器） <a class="header-anchor" href="#controller-控制器" aria-label="Permalink to &quot;Controller（控制器）&quot;">​</a></h2><p><a href="https://ruby-china.github.io/rails-guides/action_controller_overview.html" target="_blank" rel="noreferrer">相关文档</a></p><p>一般使用命令行不仅能生成控制器，也能把视图生成出来</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Calendar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span></span></code></pre></div><p>没啥好讲的</p><h2 id="route-路由" tabindex="-1">Route（路由） <a class="header-anchor" href="#route-路由" aria-label="Permalink to &quot;Route（路由）&quot;">​</a></h2><p><a href="https://ruby-china.github.io/rails-guides/routing.html" target="_blank" rel="noreferrer">相关文档</a></p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:articles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # /articles, /articles/1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:comments</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # /articles/1/comments, /comments/1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        member </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        	post </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;like&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            delete </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;unlike&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resouce </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:settings</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">only:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 单数形式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scope </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:profiles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:username&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;profiles#show&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :user_profile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        post </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:username/follow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;profiles#follow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :follow_user</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        delete </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:username/follow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;profiles#unfollow&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">as:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :unfollow_user</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;:welcome&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;welcome#show&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # GET /welcome</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    root </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">to:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;articles#index&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 根目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>添加资源路由扩展</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;recent&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:collection</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 或者</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	collection </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;recent&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>成员路由</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Rails</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.application.routes.draw </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    resources </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:post</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    	member </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            get </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;recent&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="rails-命令行⭐" tabindex="-1">Rails 命令行⭐ <a class="header-anchor" href="#rails-命令行⭐" aria-label="Permalink to &quot;Rails 命令行⭐&quot;">​</a></h2><p>有些命令在 Rails 开发过程中经常会用到，下面按照使用频率倒序列出：</p><ul><li><code>rails console</code>，简写 <code>rails c</code></li><li><code>rails server</code>，简写 <code>rails s</code></li><li><code>bin/rails</code></li><li><code>rails generate</code>，简写 <code>rails g</code></li><li><code>rails dbconsole</code></li><li><code>rails new app_name</code></li><li><code>rails destroy</code>，简写 <code>rails d</code></li></ul><p>创建一个项目</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> blog</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 生成一个 blog 项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --api</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> blog</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 以 API 形式生成一 blog 项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看所有命令行选项</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --api</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --database=postgresql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --skip-test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建一个数据库为 postgresql 的跳过测试的 api App项目</span></span></code></pre></div><p>启动 puma Web 服务</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin/rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> production</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4000</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # -e 环境 -p 端口</span></span></code></pre></div><p>使用模板生成</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> model</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> user</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> email:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name:string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 创建 user 模型</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> welcome</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 生成 welcome 控制器，hello 函数</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> destroy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> controller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> welcome</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 销毁 welcome 控制器所有配套的文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scaffold</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> article</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> title:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> description:string</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> body:text</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 生成文章脚手架，视图、控制器、模型都生成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 同步到数据库</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:rollback</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> step=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #反悔命令 step 步骤</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> g</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> migration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> AddUserGenderToUser</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gender:string</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 修改数据库</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># migration 基于的是 ActiveRecord::Migration</span></span></code></pre></div><p>使用命令行与 rails 交互</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rails</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> c</span></span></code></pre></div><h2 id="各个常用-gem" tabindex="-1">各个常用 gem <a class="header-anchor" href="#各个常用-gem" aria-label="Permalink to &quot;各个常用 gem&quot;">​</a></h2><p>以下是我收集的各种 gem 包，当然，可以去 <a href="https://www.ruby-toolbox.com/" target="_blank" rel="noreferrer">https://www.ruby-toolbox.com/</a> 去找</p><p>devise：用来做用户体系⭐</p><p>simple_form：表单提交⭐</p><p>PostgreSQL：数据库⭐</p><p>kaminari：分页⭐</p><p>Webpacker：前端资源打包</p><p>Tailwind：CSS库</p><p>Pagy：分页</p><p>jwt：jwt</p><p>pg_search/searchkick：全文搜索</p><p>rspec-rails：测试</p><p>rspec_api_documentation： 测试生成文档</p><p>Rubocop：代码格式</p><p>Clockwork：定期作业</p><p>Sidekiq：后台作业</p><p>friendly_id：生成 URL 友好的 slug</p><p>InfluxDB、Grafana 、 influxdb-rails：监控</p><p>Solargraph，ruby-rubocop：编辑工具</p><p>Rollbar 或 Honeybadger：异常管理</p><p>Postmark：发送电子邮件</p><p>activeadmin：管理工具</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://ruby-china.github.io/rails-guides/getting_started.html" target="_blank" rel="noreferrer">Ruby 官网 rails 教程</a></li><li><a href="https://github.com/bbatsov/rails-style-guide" target="_blank" rel="noreferrer">Rails 风格指南</a></li><li><a href="https://github.com/JuanitoFatas/rails-style-guide/blob/master/README-zhCN.md" target="_blank" rel="noreferrer">Rails 风格指南中文版</a></li></ul>`,99)]))}const o=i(h,[["render",p]]);export{F as __pageData,o as default};
