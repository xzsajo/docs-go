import{_ as a,c as i,a3 as e,o as n}from"./chunks/framework.CAwIQbWu.js";const g=JSON.parse('{"title":"MongoDB","description":"","frontmatter":{},"headers":[],"relativePath":"BackEnd/MongoDB.md","filePath":"BackEnd/MongoDB.md","lastUpdated":1686187612000}'),t={name:"BackEnd/MongoDB.md"};function h(l,s,p,o,k,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="mongodb" tabindex="-1">MongoDB <a class="header-anchor" href="#mongodb" aria-label="Permalink to &quot;MongoDB&quot;">​</a></h1><h2 id="什么是-mongodb" tabindex="-1">什么是 MongoDB <a class="header-anchor" href="#什么是-mongodb" aria-label="Permalink to &quot;什么是 MongoDB&quot;">​</a></h2><ul><li><p>MongoDB 是一个基于分布式文件存储的开源数据库系统</p></li><li><p>MongoDB 将数据存储为一个文档，数据结构由键值（key=&gt;value）对组成。MongoDB 文档类似于 JSON 兑现。字段值可以包含其他文档，数组及文档数组</p></li></ul><h2 id="mongodb-基本概念" tabindex="-1">MongoDB 基本概念 <a class="header-anchor" href="#mongodb-基本概念" aria-label="Permalink to &quot;MongoDB 基本概念&quot;">​</a></h2><ul><li><strong>数据库</strong> MongoDB 的单个实例可以容纳多个独立的数据库，比如一个学生管理系统就可以对应一个数据库实例</li><li><strong>集合</strong> 数据库是由集合组成，一个集合用来表示一个实体，如学生集合</li><li><strong>文档</strong> 集合是由文档组成，一个文档表示一条<strong>记录</strong>，比如一位同学</li></ul><p>MongoDB 与 Mysql 的区别</p><table tabindex="0"><thead><tr><th>Mongodb</th><th>Mysql</th></tr></thead><tbody><tr><td>文档（document）（单个文档最大 16M）</td><td>记录（row）</td></tr><tr><td>集合（collection）</td><td>表（table）</td></tr><tr><td>数据库（database）</td><td>数据库（database）</td></tr></tbody></table><h3 id="数据库操作" tabindex="-1">数据库操作 <a class="header-anchor" href="#数据库操作" aria-label="Permalink to &quot;数据库操作&quot;">​</a></h3><h4 id="使用数据库" tabindex="-1">使用数据库 <a class="header-anchor" href="#使用数据库" aria-label="Permalink to &quot;使用数据库&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> database_name</span></span></code></pre></div><ul><li>database_name 代表数据库的名字</li><li>注：如果此数据库存在，则切换到此数据库下，如果此数据库不存在也可以切过来，但是并不能立刻创建数据库</li></ul><p>切换到 scholl 数据库下</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">use</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scholl</span></span></code></pre></div><h4 id="查看所有数据库" tabindex="-1">查看所有数据库 <a class="header-anchor" href="#查看所有数据库" aria-label="Permalink to &quot;查看所有数据库&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dbs</span></span></code></pre></div><ul><li>备注：我们刚创建的数据库 <code>school</code> 如果不在列表内，要显示它，我们需要向 <code>school</code> 数据库插入一些数据</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.students.insert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;johan&#39;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="查看当前使用的数据库" tabindex="-1">查看当前使用的数据库 <a class="header-anchor" href="#查看当前使用的数据库" aria-label="Permalink to &quot;查看当前使用的数据库&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db</span></span></code></pre></div><ul><li>注：db 代表的是当前数据库 也就是 school 数据库</li></ul><h4 id="删除数据库" tabindex="-1">删除数据库 <a class="header-anchor" href="#删除数据库" aria-label="Permalink to &quot;删除数据库&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.dropDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="集合操作" tabindex="-1">集合操作 <a class="header-anchor" href="#集合操作" aria-label="Permalink to &quot;集合操作&quot;">​</a></h3><h4 id="查找集合帮助" tabindex="-1">查找集合帮助 <a class="header-anchor" href="#查找集合帮助" aria-label="Permalink to &quot;查找集合帮助&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.students.help</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h3 id="插入文档" tabindex="-1">插入文档 <a class="header-anchor" href="#插入文档" aria-label="Permalink to &quot;插入文档&quot;">​</a></h3><h4 id="insert" tabindex="-1">insert <a class="header-anchor" href="#insert" aria-label="Permalink to &quot;insert&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.student.insert(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;elaine&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="save" tabindex="-1">save <a class="header-anchor" href="#save" aria-label="Permalink to &quot;save&quot;">​</a></h4><p>保存</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">db.student.save(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;elaine&quot;,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> age:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="什么是-mongoose" tabindex="-1">什么是 Mongoose <a class="header-anchor" href="#什么是-mongoose" aria-label="Permalink to &quot;什么是 Mongoose&quot;">​</a></h3><ul><li><p>Mongoose 是 MongoDB 的一个对象模型工具</p></li><li><p>同时它也是针对 MongoDB 操作的一个对象模型库，封装了 MongoDB 对文档的一些增删改查等常用方法</p></li></ul><h2 id="使用-monggose" tabindex="-1">使用 monggose <a class="header-anchor" href="#使用-monggose" aria-label="Permalink to &quot;使用 monggose&quot;">​</a></h2><h3 id="安装-mongoose" tabindex="-1">安装 mongoose <a class="header-anchor" href="#安装-mongoose" aria-label="Permalink to &quot;安装 mongoose&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mongoose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span></span></code></pre></div><h3 id="使用-mongoose" tabindex="-1">使用 mongoose <a class="header-anchor" href="#使用-mongoose" aria-label="Permalink to &quot;使用 mongoose&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mongoose</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> require</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mongoose&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// const db = mongoose.connect(&quot;mongodb://user:pass@ip:port/database&quot;)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mongoose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">connect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mongodb://localhost:27017/school&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    useNewUrlParser: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    useUnifiedTopology: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mongoose.connection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(err);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mongoose.connection.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;open&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Mongoose连接成功&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="schema" tabindex="-1">Schema <a class="header-anchor" href="#schema" aria-label="Permalink to &quot;Schema&quot;">​</a></h3><p>Schema 是数据库集合的模型骨架 定义了集合中的字段的名称和类型以及默认值信息</p><h4 id="schema-type" tabindex="-1">Schema.Type <a class="header-anchor" href="#schema-type" aria-label="Permalink to &quot;Schema.Type&quot;">​</a></h4><p>NodeJS 中的基本数据类型都属于 Schema.Type 另外 Mongoose 还定义了自己的类型</p><p>基本属性类型有：</p><ul><li>String</li><li>Number</li><li>Date</li><li>Boolean</li><li>数组</li><li>nul</li><li>内嵌文档</li></ul><h4 id="定义-schema" tabindex="-1">定义 Schema <a class="header-anchor" href="#定义-schema" aria-label="Permalink to &quot;定义 Schema&quot;">​</a></h4><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> personSchema</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: { Type: String },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    binary: { Type: Buffer },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    living: { Type: Boolean },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    birthday: { Type: Date },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    age: { Type: Number },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    _id: Schema.Types.ObjectId, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主键</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    _fk: Schema.Types.ObjectId, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 外键</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    array: { Type: [] }, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 不确定</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h4 id="model" tabindex="-1">Model <a class="header-anchor" href="#model" aria-label="Permalink to &quot;Model&quot;">​</a></h4><p>Model 是由通过 Schema 构造而成 除了具有 Schema 定义的数据库骨架以外，还可以操作数据库。如何通过 Schema 来创建 Modal，如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> User </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mongoose.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">model</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;User&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, schema);</span></span></code></pre></div><h3 id="数据库图形化工具" tabindex="-1">数据库图形化工具 <a class="header-anchor" href="#数据库图形化工具" aria-label="Permalink to &quot;数据库图形化工具&quot;">​</a></h3><p><a href="https://robomongo.org/download" target="_blank" rel="noreferrer">Robo 3T（推荐）</a>（免费）</p><p><a href="https://robomongo.org/" target="_blank" rel="noreferrer">Studio 3T</a>（付费）</p><p>NoSQLBooster for MongoDB</p><p>教程：</p><p><a href="https://www.freecodecamp.org/chinese/learn/back-end-development-and-apis/#mongodb-and-mongoose" target="_blank" rel="noreferrer">https://www.freecodecamp.org/chinese/learn/back-end-development-and-apis/#mongodb-and-mongoose</a></p>`,55)]))}const c=a(t,[["render",h]]);export{g as __pageData,c as default};
