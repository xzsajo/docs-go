import{_ as a,c as i,a3 as t,o as n}from"./chunks/framework.CAwIQbWu.js";const g=JSON.parse('{"title":"试探 Go","description":"","frontmatter":{},"headers":[],"relativePath":"BackEnd/Go/初探Go.md","filePath":"BackEnd/Go/初探Go.md","lastUpdated":1690436985000}'),e={name:"BackEnd/Go/初探Go.md"};function p(l,s,h,o,r,k){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="试探-go" tabindex="-1">试探 Go <a class="header-anchor" href="#试探-go" aria-label="Permalink to &quot;试探 Go&quot;">​</a></h1><h2 id="安装-go" tabindex="-1">安装 Go <a class="header-anchor" href="#安装-go" aria-label="Permalink to &quot;安装 Go&quot;">​</a></h2><p>详情可参考<a href="https://golang.org/doc/install" target="_blank" rel="noreferrer">官网文档</a>下载，也可以在<a href="https://www.runoob.com/go/go-environment.html" target="_blank" rel="noreferrer">菜鸟教程</a>中按照步骤操作</p><p><img src="https://s2.loli.net/2023/07/23/vRij54Sm2NT6wOq.png" alt="go download"></p><p>笔者电脑是 Windows 系统，所以这里直接下载 Windows 版本</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装完成后 查看版本</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # go version go1.20.6 windows/amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看环境变量</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPATH</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 查看某个环境变量的值</span></span></code></pre></div><p>默认的 GOPATH 是在 C 盘中，我们需要编辑环境变量修改我们刚刚下载 Go 语言的安装目录</p><p>如此，Goland 就安装完了</p><h2 id="编辑器" tabindex="-1">编辑器 <a class="header-anchor" href="#编辑器" aria-label="Permalink to &quot;编辑器&quot;">​</a></h2><p>笔者使用的编辑器是 Visual Studio Code，这里以 VS Code 为例说明</p><p>当新建 go 后缀文件时，会提示下载 go 插件，下载之，而后它还会提示（笔者是新建go文件时报错）</p><p><img src="https://s2.loli.net/2023/07/23/NSXM53U6FyZnCsB.png" alt="image-20230723145757666"></p><p>其原因是<a href="https://github.com/microsoft/vscode-go/issues/3129" target="_blank" rel="noreferrer">国内防火墙对外网有IP设置</a>，导致下载 Go tools 失败</p><p>所以设置一下代理即可：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://proxy.golang.com.cn,direct</span></span></code></pre></div><p>这里需要说明一下，不少教程里描述了</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GO111MODULE=on</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> env</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -w</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GOPROXY=https://goproxy.io,direct</span></span></code></pre></div><p>但代理地址<a href="https://goproxy.io/zh/" target="_blank" rel="noreferrer">GOPROXY.IO</a> 上已经有所说明，设置的代理地址应该为 <code>https://proxy.golang.com.cn,direct</code>，所以改之即可</p><p>至于 GO111MODULE 是因为自 Go1.11 版本之后，有了模块概念，GO111MODULE=on，即为启动模块支持。笔者没有设置GO111MODULE，也能安装 Go tools，所以笔者没有设置</p><p>当设置为 GOPROXY 后，重新打开 VS Code，但右下角再次出现下载提示时，我们 「Install All」，结果就能全部安装</p><p><img src="https://s2.loli.net/2023/07/23/EGutK5Z2r6p7lCn.png" alt="image-20230723152553918"></p><h2 id="牛刀小试" tabindex="-1">牛刀小试 <a class="header-anchor" href="#牛刀小试" aria-label="Permalink to &quot;牛刀小试&quot;">​</a></h2><p>此时，我们已经安装完 Goland 以及在 VS Code 中安装 Go 插件，直接动手写一行代码，看看能不能执行。新建一个<code>main.go</code> 文件，写入以下代码</p><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>打开终端，执行</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.go</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # Hello, World!</span></span></code></pre></div><p>package ：在代码最开始写（非注释的第一行写），定义这个文件的名字</p><p>类似于前端中的 <code>export default xx</code></p><p>import：引入库</p><p>前端中也有类似的概念</p><p>func：表示函数</p><p>前端中的函数标识符是：function</p><p>main：表示程序执行的入口函数</p><p><a href="https://github.com/Zhouchaowen/golang-tutorial/tree/master/1-package" target="_blank" rel="noreferrer">https://github.com/Zhouchaowen/golang-tutorial/tree/master/1-package</a></p><h2 id="go-的命令行技巧" tabindex="-1">go 的命令行技巧 <a class="header-anchor" href="#go-的命令行技巧" aria-label="Permalink to &quot;go 的命令行技巧&quot;">​</a></h2><p><code>go fmt main.go</code>：格式化go文件</p>`,36)]))}const c=a(e,[["render",p]]);export{g as __pageData,c as default};
